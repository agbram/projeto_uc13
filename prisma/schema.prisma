// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Cart{
  id Int @id @default(autoincrement())

  items_selected String
  remove_add_items String
  go_to_payment String

  createdAt DateTime @map("created_at") @default( now() )
  updatedAt DateTime @map("updated_at) @default( now() )
  
  }

model payment{
  id Int @id @default(autoincrement())
  pix String
  credit_card String
  status Boolean
  value Int
  user String
  date Date
  order_detail String
  order id Int @id @default(autoincrement())
  createdAt DateTime @map("created_at") @default( now() )
  updatedAt DateTime @map("updated_at) @default( now() )
 
  }

model User {
  id Int @id @default(autoincrement())
  pass String
  email String
  name String
  birth Date
  creditCard String
  address String
  phone String

  createdAt DateTime @map("created_at") @default( now() )
  updateAt DateTime 

}

model rules {
  id Int @id @default(autoincrement())  
  stockControl Boolean @map("stock_Control")
  lowStockAlert Boolean @map("low_Stock_Alert")
  registerProduct Boolean @map("register_Product")
  disableProduct Boolean @map("disable_Product")
  editStock Boolean @map("edit_Stock")
  usersRegisterd Boolean @map("users_Registerd")
  stockList Boolean @map("stock_List")
  editUser Boolean @map("edit_User")
  dashboardInvoicing Boolean @map("dashboard_Invoicing")
  recipes Boolean 
  pricing Boolean
  newOffer Boolean @map("new_Offer")
  shopCart Boolean @map("shop_Cart")
  myPurchases Boolean @map("my_Purchases")
  profile Boolean
  sumStock Boolean @map("sum_Stock")
  disableUser Boolean @map("disable_User")
  purchasingReport Boolean @map("purchasing_Report")
  userList Boolean @map("user_List")
  userStats Boolean @map("user_Stats")
  productStats Boolean @map("product_Stats")

  createdAt DateTime @map("created_at") @default( now() )
  updateAt DateTime

}

model Purchases{
  id Int @id @default(autoincrement())

  purchaseClientName String
  purchaseClientAddress String
  purchasedProducts String
  purchasePaymentForm String
  purchasedQuantity Int
  purchasePrice Double

  isFinished Boolean
  isShipped Boolean

  createdAt DataTime @map("created_at") @default( now() )
  updatedAt DataTime @map("updated_at) @default( now() )
  
}

model Stock{
  id Int @id @default(autoincrement())  
  productName String
  productType String
  productPrice Double

  isInStock Boolean
  amountInStock Int

  createdAt DataTime @map("created_at") @default( now() )
  updatedAt DataTime @map("updated_at) @default( now() )

}